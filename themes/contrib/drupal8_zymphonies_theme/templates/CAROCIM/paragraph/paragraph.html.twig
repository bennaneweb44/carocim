{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

        <div class="paragraph paragraph--type--principal paragraph--view-mode--default" style="position: relative">        
            <img src="{{ image }}" class="img-responsive imgPageStatique"/>
            <div class="slider-caption text-left">
                <h2 class="slider-title">{{ titre }} </h2>
            </div>        
        </div>      

        <div class="paragraph--type--columns__1col chapeau">
            {{ resume |raw}}
        </div>

        {% if resume != '' %}
            <hr class="ligne">
        {% endif %}        

        <div class="paragraph--type--columns__1col texte">
            {{ texte |raw}}
        </div>
      

    {% endblock %}
  </div>
{% endblock paragraph %}

<style>
    .imgPageStatique {
        border: 3px solid #000;
        height: 30em;
        width: 70%;
        margin: auto;
        margin-bottom: 0;
        border-radius: 0.4em;
    }

    .slider-caption {
        font-size: 0.7em;
        width: max-content; 
        position: absolute; 
        bottom: 0.5em; 
        left: 16%; 
        height: 5em;
        padding: auto;
    }

    /**** Image pas trp haute sur mobile ****/
    @media (max-width: 640px) {
        .imgPageStatique {
            width: 100%;
            height: 70%;
        }
        .slider-caption {
            left: 0;
        }
    }

    @media (min-width: 481px) and (max-width: 767px) {
        .slider-caption {
            left: 0;
        }
    }

    /******** Chapeau *******/
    /******** Chapeau *******/
    /******** Chapeau *******/
    .ligne {
        width: 70%;
        margin: auto;
    }
    .chapeau {
        border-radius: 0.2em; 
        width: 70%;
        margin: auto;
        margin-top: 2em;
        margin-bottom: 2em;
    }

    /* <hr> séparateur */
    hr {
        border: none;
        border-top: 3px double #333;
        color: #333;
        overflow: visible;
        text-align: center;
        height: 5px;
        margin-bottom: -1em;
    }

    hr:after {
        background: #fff;
        content: '§';
        padding: 0 4px;
        position: relative;
        top: -13px;
    }

    /**** Image pas trp haute sur mobile ****/
    @media (max-width: 640px) {
        .chapeau {
            width: 100%;
        }
    }


    /******** Texte *******/
    /******** Texte *******/
    /******** Texte *******/
    .texte {
        border-radius: 0.2em; 
        width: 70%;
        margin: auto;
        margin-top: 2em;
    }

    @media (min-width: 320px) and (max-width: 480px) {
        .texte {
            width: 100%;
        }
    }

    /* Début du mobile */
    @media (min-width: 481px) and (max-width: 767px) {
        .slider-caption {
            display: block;
        }
        .imgPageStatique {
            width: 100%;
            height: 30em;
        }
        .chapeau, .texte {
            width: 100%;
        }
    }
    @media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
        .imgPageStatique {
            height: 30em;
        }
    }
    @media (min-width: 768px) and (max-width: 1024px) {
        .imgPageStatique {
            height: 30em;
            width: 100%;
        }
        .slider-caption {
            left: 0;
        }
        .chapeau, .texte {
            width: 100%;
        }
    }
</style>
